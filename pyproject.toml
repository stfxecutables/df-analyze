[project]
name = "df-analyze"
version = "3.3.1"
description = "Add your description here"
authors = [{ name = "Derek Berger", email = "" }]
dependencies = [
  "joblib>=1.4.2",
  "jsonpickle>=3.3.0",
  "lightgbm>=4.5.0",
  "matplotlib>=3.9.2",
  "openpyxl>=3.1.5",
  "optuna>=4.0.0",
  "pandas>=2.2.3",
  "scikit-learn>=1.5.2",
  "scipy>=1.14.1",
  "skorch>=1.0.0",
  "typing-extensions>=4.9.0",
  "tabulate>=0.9.0",
  "openml>=0.14.2",
  "torch>=2.4.1",
  "torchvision>=0.19.1",
  "numpy>=1.26.3",
  "tqdm>=4.64.1",
  "pytest>=8.3.3",
  "cli-test-helpers>=4.0.0",
  "transformers[torch]>=4.45.1",
  "accelerate>=0.34.2",
  "datasets[vision]>=3.0.1",
  "protobuf>=5.28.2",
  "sentencepiece>=0.2.0",
  "llvmlite>=0.43.0",
  "numba>=0.60.0",
  "pyarrow>=17.0.0",
  "pytest-xdist[psutil]>=3.6.1",
  "python-dateutil>=2.9.0.post0",
  "scikit-image>=0.24.0",
  "seaborn>=0.13.2",
  "statsmodels>=0.14.3",
  "torchaudio>=2.4.1",
]
readme = "README.md"
requires-python = ">= 3.12.5"

[project.scripts]
"df-analyze" = "df_analyze:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.rye]
managed = true
universal = true
dev-dependencies = ["pytest>=8.2.1", "ruff>=0.4.4"]

[[tool.rye.sources]]
name = "torch"
url = "https://download.pytorch.org/whl/cpu"
type = "index"

[[tool.rye.sources]]
name = "torchvision"
url = "https://download.pytorch.org/whl/cpu"
type = "index"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["src/df_analyze"]

[tool.ruff]
line-length = 90
indent-width = 4
target-version = "py310"
respect-gitignore = true

[tool.ruff.lint]
ignore = ["E402"]

[tool.ruff.lint.isort]
known-first-party = ["src", "test"]
section-order = [
  "future",
  "standard-library",
  "third-party",
  "local-folder",
  "first-party",
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402"]


[tool.pytest.ini_options]
testpaths = ["test"]
filterwarnings = [
  # action:message:category:module:line
  'ignore:PytestCollectionWarning',
  'ignore::DeprecationWarning',
  'ignore:Lazy Modules:UserWarning',
  'ignore:ConvergenceWarning',
  'ignore:FutureWarning',
  # Below comes from pd.get_dummies in src.df_analyze.preprocessing.cleaning.py:563
  # so is not our problem, Pandas can fix
  'ignore:The behavior of Index.insert:FutureWarning',
  # Below errors are only relevant to users, not in testing
  'ignore:Dropping NaNs is currently not implemented:UserWarning',
  'ignore:AUROC cannot be used for tuning as it requires probabilities:UserWarning',
  'ignore:Maximum number of iteration reached before convergence',
  'ignore:The max_iter was reached',
  'ignore:.*does not have many workers.*',
  'ignore:Without pruning, Optuna:UserWarning',
]
markers = [
  "slow: marks tests as slow (deselect with '-m \"not slow\"')",
  "med: marks tests as medium (deselect with '-m \"not med\"')",
  "medium: marks tests as medium (deselect with '-m \"not medium\"')",
  "fast: marks tests as fast (deselect with '-m \"not fast\"')",
  "regen: marks tests as being for regenerating cached results",
  "cached: marks tests as using cached results (deselect with '-m \"not cached\"')",
  "wip: marks tests not expected to pass (deselect with '-m \"not wip\"')",
]


# torch = [
#   { version = "=2.1.1", source = "pypi", platform = "darwin" },
#   { version = "=2.1.1+cpu", source = "pytorch", platform = "linux" },
#   { version = "=2.1.1+cpu", source = "pytorch", platform = "win32" },
# ]
# torchvision = [
#   { version = "=0.16.1", source = "pypi", platform = "darwin" },
#   { version = "=0.16.1+cpu", source = "pytorch", platform = "linux" },
#   { version = "=0.16.1+cpu", source = "pytorch", platform = "win32" },
# ]
